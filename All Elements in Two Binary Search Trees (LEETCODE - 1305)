/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {
        List<Integer> l1=new ArrayList<>();
        List<Integer> l2=new ArrayList<>();
        List<Integer> res=new ArrayList<>();
        l1=inorder(root1);
        l2=inorder(root2);
        int i=0,j=0;
        while (i < l1.size() && j < l2.size()) 
        {
        if (l1.get(i) <= l2.get(j))
        {
                res.add(l1.get(i));
                i++;
        } else 
        {
                res.add(l2.get(j));
                j++;
            }
        }

        while (i < l1.size()) {
            res.add(l1.get(i));
            i++;
        }

        while (j < l2.size()) {
            res.add(l2.get(j));
            j++;
        }

        return res;
    }
   

    public List<Integer> inorder(TreeNode node)
    {
        List<Integer> list = new ArrayList<>();
        if(node==null)
        return list;
        list.addAll(inorder(node.left));
        list.add(node.val);
        list.addAll(inorder(node.right));
        return list;
    }
}


