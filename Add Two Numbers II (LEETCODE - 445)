/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode newl1=reverse(l1);
        ListNode newl2=reverse(l2);
        ListNode ans=new ListNode();
        ListNode ptr=ans;
        int sum=0;
        int carry=0;
        int val1,val2;
        while(newl1!=null || newl2!=null)
        {
            if(newl1!=null)
            val1=newl1.val;
            else
            val1=0;

            if(newl2!=null)
            val2=newl2.val;
            else
            val2=0;

            sum=val1+val2+carry;
            carry=sum/10;

            ptr.next = new ListNode(sum % 10);
            ptr = ptr.next;

            if(newl1!=null)
            {
                newl1=newl1.next;
            }

            if(newl2!=null)
            {
                newl2=newl2.next;
            }
        }
            if (carry > 0) 
            {
                ptr.next = new ListNode(carry);
            }
        return reverse(ans.next);
    }

    public ListNode reverse(ListNode head)
    {
        ListNode curr=head;
        ListNode prev=null;
        while(curr!=null)
        {
            ListNode next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
}
