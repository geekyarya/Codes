class Solution {

    public static int binaryToDecimal(int[] binaryArray) {
        int decimal = 0;
        int power = binaryArray.length - 1;
        for (int i = 0; i < binaryArray.length; i++) {
            decimal += binaryArray[i] * Math.pow(2, power);
            power--;
        }
        return decimal;
    }

    public int matrixScore(int[][] grid) {
        int row = grid.length;
        int col = grid[0].length;
        
        
        for (int i = 0; i < row; i++) {
            if (grid[i][0] == 0) {
                for (int j = 0; j < col; j++) {
                    if (grid[i][j] == 1)
                        grid[i][j] = 0;
                    else
                        grid[i][j] = 1;
                }
            }
        }

       
        for (int j = 1; j < col; j++) {
            int countZero=0;
            for(int i=0;i<row;i++)
            {
                if(grid[i][j]==0)
                {
                    countZero++;
                }
            }
            int countOne=row-countZero;
            if(countZero>countOne)
            {
                for(int i=0;i<row;i++)
                {
                    if (grid[i][j] == 1)
                        grid[i][j] = 0;
                    else
                        grid[i][j] = 1; 
                }
            }
        }
          

        int sum = 0;

        for (int i = 0; i < grid.length; i++) {
            sum += binaryToDecimal(grid[i]);
        }
        return sum;
    }
}
