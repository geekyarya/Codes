/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

class Solution {
    List<Integer> res = new ArrayList<>();
    
    public TreeNode insertIntoBST(TreeNode root, int val) {
        inorder(root);
        res.add(val);
        Collections.sort(res);
        return createBST(res,0, res.size() - 1);
    }

    public TreeNode createBST(List<Integer> in,int low, int high) {
        if (low > high)
            return null;

        int mid = (low + high) / 2;

        TreeNode root = new TreeNode(in.get(mid));

        root.left = createBST(in,low, mid - 1);
        root.right = createBST(in,mid + 1, high);

        return root;
    }

    public void inorder(TreeNode root) {
        if (root == null)
            return;
        inorder(root.left);
        res.add(root.val);
        inorder(root.right);
    }
}
