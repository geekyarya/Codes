/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNodes(ListNode head) {
        ListNode newHead = reverseList(head);
        ListNode prev = null;
        ListNode curr = newHead;

        int max = 0;
        while(curr != null) {
            if(curr.val > max) 
            {
                max = curr.val;
            }

            if(curr.val < max) 
            {
                prev.next = curr.next;
            } 
            else 
            {
                prev = curr;
            }
            curr = curr.next;
        }

        return reverseList(newHead);
    }

    private ListNode reverseList(ListNode head) {
        ListNode prev = null;
        ListNode curr = head;

        while(curr != null) {
            ListNode next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }

        return prev;
    }
}
