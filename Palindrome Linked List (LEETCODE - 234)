/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode tempHead=middle(head);
        ListNode rev=reverse(tempHead);
        ListNode ptr1=head;
        ListNode ptr2=rev;
        if(head==null || head.next==null)
        return true;
        while(ptr2!=null)
        {
            if(ptr1.val==ptr2.val)
            {
                return true;
            }
            else
            {
                ptr1=ptr1.next;
                ptr2=ptr2.next;
            }
        }
        return false;        
    }
    
    public ListNode middle(ListNode head)
    {
        if(head==null ||head.next==null)
        return head;
        ListNode slow=head;
        ListNode fast=head.next;
        while(fast.next!=null && fast.next.next!=null)
        {
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow.next;
    }

    public ListNode reverse(ListNode Head)
    {
        ListNode prev=null;
        ListNode curr=Head;
        while(curr!=null)
        {
            ListNode next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }   
}
