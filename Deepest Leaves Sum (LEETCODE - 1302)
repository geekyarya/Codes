/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int sum=0;
    public int deepestLeavesSum(TreeNode root) {
        int maxDepth=maxDepth(root);
        findsum(root,1,maxDepth);
        return sum;
    }
    public int maxDepth(TreeNode root)
    {
        if(root==null)
        return 0;
        return Math.max(maxDepth(root.left),maxDepth(root.right))+1;
    }
    public void findsum(TreeNode root,int curr,int depth)
    {
        if(root!=null)
        {
            if(curr==depth)
            {
                sum+=root.val;
            }
            findsum(root.left,curr+1,depth);
            findsum(root.right,curr+1,depth);
        }
    }

}


