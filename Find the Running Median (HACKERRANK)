 public static List<Double> runningMedian(List<Integer> a) { 
        List<Double> result = new ArrayList<>();
        Queue<Integer> maxHeap = new PriorityQueue<>(Collections.reverseOrder());
        Queue<Integer> minHeap = new PriorityQueue<>();
        
        result.add(a.get(0)*1.0);
        maxHeap.add(a.get(0));
        
        for(int i=1;i<a.size();i++)
        {
            int num=a.get(i);
        if(maxHeap.size()>minHeap.size())
          minHeap.add(num);
        else
          maxHeap.add(num); 
        
        while(maxHeap.peek()>minHeap.peek())
        {
            int bigger=maxHeap.poll();
            int smaller=minHeap.poll();
            maxHeap.add(smaller);
            minHeap.add(bigger);
        }
        if(maxHeap.size()>minHeap.size())
          result.add(maxHeap.peek()*1.0);
        else
          result.add((maxHeap.peek()+minHeap.peek())/2.0);
        }
    return result;
    }
